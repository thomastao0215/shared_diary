{"remainingRequest":"/Users/jiachen/projects/shared_diary/node_modules/_babel-loader@8.0.6@babel-loader/lib/index.js!/Users/jiachen/projects/shared_diary/src/utils/util.js","dependencies":[{"path":"/Users/jiachen/projects/shared_diary/src/utils/util.js","mtime":1574666290487},{"path":"/Users/jiachen/projects/shared_diary/node_modules/_cache-loader@1.2.5@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jiachen/projects/shared_diary/node_modules/_babel-loader@8.0.6@babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["const _ = require('./underscore');\n\nconst V = require('./v.js');\n\nconst formatNumber = n => {\n  n = n.toString();\n  return n[1] ? n : '0' + n;\n};\n\nconst formatTime = date => {\n  const year = date.getFullYear();\n  const month = date.getMonth() + 1;\n  const day = date.getDate();\n  const hour = date.getHours();\n  const minute = date.getMinutes();\n  const second = date.getSeconds();\n  return [year, month, day].map(formatNumber).join('-') + ' ' + [hour, minute, second].map(formatNumber).join(':');\n};\n\nfunction isValidateCellphoneNumber(cellphone) {\n  if (cellphone.match(/^(((13[0-9]{1})|159|153)+\\d{8})$/)) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\nfunction findObjectFromArrayByProp(arr, val, prop) {\n  if (prop === undefined) prop = 'id';\n  return _.find(arr, function (e) {\n    return e[prop] === val;\n  });\n}\n\nfunction findIndexInArrayByProp(arr, val, prop) {\n  if (prop === undefined) prop = 'id';\n  return _.findIndex(arr, function (e) {\n    return e[prop] === val;\n  });\n}\n\nfunction calLength(str) {\n  var len = 0;\n\n  for (var i = 0; i < str.length; i++) {\n    var a = str.charAt(i);\n\n    if (a.match(/[^\\x00-\\xff]/ig) != null) {\n      len += 2;\n    } else {\n      len += 1;\n    }\n  }\n\n  return len;\n}\n\nvar sysInfo = wx.getSystemInfoSync();\n\nfunction isIphoneX() {\n  return sysInfo.model.indexOf('iPhone X') >= 0;\n}\n\nfunction isHighScreen() {\n  return 1.0 * sysInfo.screenWidth / sysInfo.screenHeight < 1.0 * 375 / 690;\n}\n\nfunction getScreenHeight(cut) {\n  return sysInfo.windowHeight * 750 / sysInfo.windowWidth - cut || 0;\n}\n\nfunction getPxToRpx(px) {\n  return getPxRpxRate() * px;\n}\n\nfunction getPxRpxRate() {\n  return 750.0 / sysInfo.windowWidth || 2;\n}\n\nfunction getPx(px, windowWidth) {\n  // if (px == 375) return windowWidth;\n  return parseInt(px * windowWidth * 1.0 / 375);\n}\n\nfunction getPxByRpx(rpx, windowWidth) {\n  return getPx(rpx * 1.0 / 2, windowWidth);\n}\n/**\n * 绘制多行文本，并返回高度差\n * @param  CanvasContext ctx\n * @param  string text\n * @param  int x            [description]\n * @param  int y            [description]\n * @param  int maxWidth     [description]\n * @param  int lineHeight   [description]\n * @param  int defaultLines [description]\n * @param  boolean forceLine    固定内容行数\n * @return int              实际绘制高度-计划高度\n */\n\n\nlet drawText = (ctx, text, x, y, maxWidth, lineHeight, defaultLines = 1, forceLine) => {\n  var lineWidth = 0;\n  var lineCount = 1;\n  var initHeight = y; //绘制字体距离canvas顶部初始的高度\n\n  var lastSubStrIndex = 0; //每次开始截取的字符串的索引\n\n  for (let i = 0; i < text.length; i++) {\n    lineWidth += ctx.measureText(text[i]).width;\n\n    if (lineWidth > maxWidth) {\n      if (forceLine) {\n        ctx.fillText(text.substring(lastSubStrIndex, i - 3) + '...', x, initHeight); //绘制截取部分\n\n        return 0;\n      }\n\n      ctx.fillText(text.substring(lastSubStrIndex, i), x, initHeight); //绘制截取部分\n\n      initHeight += lineHeight || 24; //20为字体的高度\n\n      lineWidth = 0;\n      lastSubStrIndex = i;\n      lineCount += 1;\n    } // console.log(lineCount, defaultLines, lineHeight);\n\n\n    if (i == text.length - 1) {\n      //绘制剩余部分\n      ctx.fillText(text.substring(lastSubStrIndex, i + 1), x, initHeight);\n    }\n  }\n\n  return (lineCount - defaultLines) * (lineHeight || 24);\n};\n\nfunction setData(context, data) {\n  if (!context || !context.setData || typeof context.setData !== 'function') return;\n\n  var _data = _.extend({\n    isIphoneX: isIphoneX(),\n    isHighScreen: isHighScreen()\n  }, data);\n\n  context.setData(_data);\n}\n\nfunction toFixedFloat(f, n = 2) {\n  return parseFloat(parseFloat(f).toFixed(n));\n}\n\nfunction getPositiveIndex(index, part) {\n  return (part + index % part) % part;\n}\n\nfunction getTextLength(str) {\n  if (!str) return 0;\n  return str.match(/[^ -~]/g) == null ? str.length : str.length + str.match(/[^ -~]/g).length;\n}\n\nfunction tipNetworkException() {\n  wx.showModal({\n    title: '网络异常',\n    content: '请确认网络状态',\n    showCancel: false,\n    confirmText: '好'\n  });\n}\n\nfunction tipSystemException() {\n  wx.showModal({\n    title: '系统异常',\n    content: '请联系客服',\n    showCancel: false,\n    confirmText: '好'\n  });\n}\n\nfunction showLoading(title) {\n  wx.showLoading({\n    icon: 'loading',\n    mask: true,\n    title: title || '...'\n  });\n}\n\nfunction hideLoading() {\n  wx.hideLoading();\n}\n\nfunction warning(title) {\n  wx.showToast({\n    icon: 'none',\n    title: title\n  });\n}\n\nfunction success(title) {\n  wx.showToast({\n    icon: 'success',\n    title: title\n  });\n}\n\nfunction showModal(content, yFunc, title, showCancel, nFunc, cancelText) {\n  if (!content) return;\n  wx.showModal({\n    title: title || '提示',\n    content: content,\n    success: res => res.confirm ? yFunc && yFunc() : nFunc && nFunc(),\n    showCancel: showCancel,\n    cancelText: cancelText || '取消'\n  });\n}\n\nfunction getOptions(options) {\n  //scene=k1:v1;k2:v2;\n  if (options.scene) {\n    let scene = decodeURIComponent(options.scene); // 官方要求一定要先decodeURIComponent才能正常使用scene\n\n    scene = scene.split(';');\n    let obj = {};\n\n    for (let i = 0; i < scene.length; i++) {\n      let item = scene[i].split(':');\n      obj[item[0]] = item[1];\n    } // 将options.id 替换为scene中提取的id 以保证后续业务不受影响\n\n\n    return obj;\n  } else if (options.q) {\n    //q={k1:v1,k2:v2};\n    try {\n      return JSON.parse(decodeURIComponent(options.q));\n    } catch (e) {\n      console.error(e);\n      return {};\n    }\n  } else {\n    return options;\n  }\n}\n\nfunction toQueryString(obj) {\n  return _.map(obj, (v, k) => `${k}=${v}`).join('&');\n}\n\nfunction encodeOptions(obj) {\n  let q = encodeURIComponent(JSON.stringify(obj));\n  return {\n    q\n  };\n}\n\nfunction isLastInArray(index, arr) {\n  return arr && arr.length - 1 === index;\n}\n\nfunction downloadImage(url) {\n  return new Promise((resolve, reject) => wx.downloadFile({\n    url: url,\n\n    //仅为示例，并非真实的资源\n    success(res) {\n      // 只要服务器有响应数据，就会把响应内容写入文件并进入 success 回调，业务需要自行判断是否下载到了想要的内容\n      if (res.statusCode === 200) return resolve(res.tempFilePath);\n      return reject(res);\n    },\n\n    fail: reject\n  }));\n}\n\nfunction downloadAllImage(urls) {\n  return Promise.all(_.map(urls, url => downloadImage(url)));\n}\n\nexport default {\n  formatNumber,\n  formatTime,\n  isValidateCellphoneNumber,\n  findObjectFromArrayByProp,\n  findIndexInArrayByProp,\n  calLength,\n  setData,\n  isIphoneX,\n  isHighScreen,\n  getPositiveIndex,\n  getTextLength,\n  getScreenHeight,\n  toFixedFloat,\n  tipSystemException,\n  tipNetworkException,\n  showModal,\n  success,\n  warning,\n  showLoading,\n  hideLoading,\n  encodeOptions,\n  toQueryString,\n  getOptions,\n  isLastInArray,\n  getPx,\n  getPxByRpx,\n  drawText,\n  downloadImage,\n  downloadAllImage\n};",null]}